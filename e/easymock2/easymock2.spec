Epoch: 0
# BEGIN SourceDeps(oneline):
BuildRequires(pre): rpm-build-java
# END SourceDeps(oneline)
AutoReq: yes,noosgi
BuildRequires: rpm-build-java-osgi
BuildRequires: /proc
BuildRequires: jpackage-compat
Name:           easymock2
Version:        2.5.2
Release:        alt4_7jpp7
Summary:        Easy mock objects
License:        ASL 2.0
Group:          Development/Java
URL:            http://easymock.org/
# generated by sh fetch-easymock.sh
Source0:        easymock-%{version}.tgz
# extracted from http://download.eclipse.org/tools/orbit/downloads/drops/R20090529135407/bundles/org.easymock_2.4.0.v20090202-0900.jar#META-INF/MANIFEST.MF
Source1:        easymock-MANIFEST.MF
# generated by mvn ant:ant
Source2:        build.xml.tar.gz
Source3:        fetch-easymock.sh
Patch0:		easymock2-nameClash.patch

BuildRequires:  jpackage-utils >= 0:1.7.2
BuildRequires:  ant >= 0:1.6
BuildRequires:  junit >= 3.8.1
BuildRequires:  java-javadoc
BuildRequires:  zip
BuildArch:      noarch
Requires:       jpackage-utils >= 0:1.7.2
Source44: import.info

%description
EasyMock provides Mock Objects for interfaces in JUnit tests by generating
them on the fly using Java's proxy mechanism. Due to EasyMock's unique style
of recording expectations, most refactorings will not affect the Mock Objects.
So EasyMock is a perfect fit for Test-Driven Development.

%package javadoc
Summary:    Javadoc for %{name}
Group:      Development/Java
BuildArch: noarch

%description javadoc
Javadoc for %{name}.

%prep
%setup -q -n easymock
%patch0 -p2
mkdir -p .m2/repository/JPP/maven2/default_poms
tar xzf %{SOURCE2}

# remove all binary libs
find . -name "*.jar" -exec rm -f {} \;

%build
ant -Dant.build.javac.source=1.5 -Dant.build.javac.target=1.5  -Dmaven.mode.offline=true -Dmaven.repo.local=.m2 -Dmaven.test.skip=true package javadoc
mv target/easymock-2.5.jar target/%{name}-%{version}.jar

# inject OSGi manifests
mkdir -p META-INF
cp -p %{SOURCE1} META-INF/MANIFEST.MF
touch META-INF/MANIFEST.MF
zip -u target/%{name}-%{version}.jar META-INF/MANIFEST.MF

%install

# jars
install -d -m 755 %{buildroot}%{_javadir}
%add_to_maven_depmap org.easymock easymock %{version} JPP %{name}

install -m 644 target/%{name}-%{version}.jar \
    %{buildroot}%{_javadir}/%{name}.jar

# pom
install -d -m 755 %{buildroot}%{_datadir}/maven2/poms
install -pm 644 pom.xml \
    %{buildroot}%{_datadir}/maven2/poms/JPP-%{name}.pom

# javadoc
install -d -m 755 %{buildroot}%{_javadocdir}/%{name}-%{version}
cp -pr target/site/apidocs/* %{buildroot}%{_javadocdir}/%{name}-%{version}
ln -s %{name}-%{version} %{buildroot}%{_javadocdir}/%{name}
rm -rf target/site/apidocs

%files
%doc LICENSE.txt
%{_javadir}/*
%{_datadir}/maven2/poms/*
%{_mavendepmapfragdir}

%files javadoc
%doc %{_javadocdir}/*

%changelog
* Fri Apr 12 2013 Igor Vlasenko <viy@altlinux.ru> 0:2.5.2-alt4_7jpp7
- added osgi provides

* Fri Aug 31 2012 Igor Vlasenko <viy@altlinux.ru> 0:2.5.2-alt3_8jpp7
- fc version

* Thu Mar 29 2012 Igor Vlasenko <viy@altlinux.ru> 0:2.5.2-alt3_2jpp6
- dropped felix-maven2 dependency

* Wed Mar 28 2012 Igor Vlasenko <viy@altlinux.ru> 0:2.5.2-alt2_2jpp6
- build w/java6

* Fri Sep 03 2010 Igor Vlasenko <viy@altlinux.ru> 0:2.5.2-alt1_2jpp6
- new version

* Tue May 11 2010 Igor Vlasenko <viy@altlinux.ru> 0:2.3-alt2_1jpp5
- fixes for java6 support

* Tue Mar 17 2009 Igor Vlasenko <viy@altlinux.ru> 0:2.3-alt1_1jpp5
- fixed build

* Wed Oct 08 2008 Igor Vlasenko <viy@altlinux.ru> 0:2.3-alt0.1jpp
- bootstrap

